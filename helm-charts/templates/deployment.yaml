{{- range $serviceName, $serviceConfig := .Values.services }}
{{- if $serviceConfig.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "genai.fullname" $ }}-{{ $serviceName }}
  labels:
    {{- include "genai.labels" $ | nindent 4 }}
spec:
  replicas: {{ $serviceConfig.replicaCount }}
  selector:
    matchLabels:
      {{- include "genai.selectorLabels" $ | nindent 6 }}
      service: {{ $serviceName }}
  template:
    metadata:
      labels:
        {{- include "genai.selectorLabels" $ | nindent 8 }}
        service: {{ $serviceName }}
    spec:
      containers:
      - name: {{ $serviceName }}
        image: {{ include "genai.image" (dict "root" $ "service" $serviceName) }}
        ports:
        - containerPort: {{ $serviceConfig.port }}
        
        # RESSOURCES ADAPTATIVES
        resources:
          {{- if $.Values.global.isCloud }}
          {{- toYaml $serviceConfig.resources | nindent 10 }}
          {{- else }}
          # En local, on all√®ge les requirements
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m  
            memory: 256Mi
          {{- end }}
            
        env:
        - name: ENVIRONMENT
          value: {{ $.Values.global.environment | quote }}
        - name: IS_CLOUD
          value: {{ $.Values.global.isCloud | quote }}
        
        # VOLUMES UNIQUEMENT SI NECESSAIRE
        {{- if and (not $.Values.global.isCloud) ($.Values.volumes.data.enabled) }}
        volumeMounts:
        - name: local-data
          mountPath: /app/data
        {{- end }}
        
      # VOLUMES HOSTPATH UNIQUEMENT EN LOCAL
      {{- if and (not $.Values.global.isCloud) ($.Values.volumes.data.enabled) }}
      volumes:
      - name: local-data
        hostPath:
          path: {{ $.Values.volumes.data.hostPath }}
          type: DirectoryOrCreate
      {{- end }}
      
---
{{- end }}
{{- end }}
